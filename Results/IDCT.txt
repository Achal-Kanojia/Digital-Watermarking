`timescale 1fs / 1fs
//////////////////////////////////////////////////////////////////////////////////

module idct();
integer x,y,i,j;
integer fd;
real temp=0.0;
real fin;
real pi=3.14;
reg signed [15:0] lenna[0:128*128-1];
reg signed [15:0] duplenna[0:128*128-1];
reg signed [15:0] out[0:127][0:127];
reg signed [15:0] IDCT[0:127][0:127];

initial begin
    //fd = $fopen("wen.txt","a");
    $readmemh("dct_file.txt",lenna);
    for (i=0; i<128*128; i=i+1) begin
        duplenna[i] = lenna[i] + 16'b1000000000000000;
        /*if (duplenna[i] == 16'b1000000000000000) begin
            duplenna[i] = 0;
        end
        if (duplenna[i] < 16'b1000000000000000) begin
            duplenna[i] = duplenna[i] - 16'b1000000000000000;
        end
        if (duplenna[i] > 16'b1000000000000000) begin
            duplenna[i] = duplenna[i] - 16'b1000000000000000;
        end*/
    end
end
initial begin
        for (i = 0; i < 128; i=i+1) begin
        for (j = 0; j < 128; j=j+1) begin
            out[i][j] = duplenna[128*i+j];
        end
        end
        
        for (x = 0; x < 128; x=x+1) begin
        for (y = 0; y < 128; y=y+1) begin
        fin = 0.0;
        for (i = 0; i < 128; i=i+1) begin
            for (j = 0; j < 128; j=j+1) begin
                temp = ($cos(((2*y+1)*j*pi)/256) * $cos(((2*x+1)*i*pi)/256) * (out[i][j] - 16'b1000000000000000));
                if (i==0 && j==0)begin
                temp = temp/2;
                end
                if ((i==0 && j!=0) || (i!=0 && j==0))begin
                temp = temp/$sqrt(2);
                end
                fin = fin + temp;
            end
            end
        fin = fin/64;
        IDCT[x][y] = fin;
        end
        end
        
        /*for (i=0; i<128; i=i+1) begin
        for (j=0; j<128; j=j+1) begin
            $fwrite(fd,"%x\n",IDCT[i][j]);
        end
        end
        
        $fclose(fd);
        */
        end
endmodule
